
uses: actions/rp2350-firmware-signer@main
  with:
    # Path to the previously generated uf2 firmware file
    FIRMWARE: 'unsigned/blink_fast.uf2'

    # 'sign' to sign an existing firmware file.
    # 'build' to build the firmware from source and sign it.
    #   if the PRIVATE_KEY is provided.
    BUILD_ACTION: 'sign'
    
    #Base64 encoded private key normally loaded from
    #github secret but you can provide it from 
    #any source. 
    PRIVATE_KEY: ${{ secrets.RP2350_SAMPLE_PRIVATE_KEY }}
    
    # Path to otp firmare options file that will be 
    # updated with public key for signing.
    OTP_FILE: signed/blink_fast.otp.json

    #  this is the boardname passed into the build
    #  scripts.  normally only used when build_action
    #  is set to build.  May not be needed for 
    #  sign only events.
    BOARD_NAME: 'pico2'

    # source directory containing source code to build
    #  with the SDK file.  Mandatory when build_action 
    #  is set to build. This is the directory where 
    #  you have saved your CMakeLists.txt See and example
    #  at https://github.com/immutaverse/rp2350-ex-blink-fast    
    #  ignored when build_action is set to sign.
    SOURCE_DIR: 'NOT SET'

    #  metadata file that contains the metadata for the
    # the firmware signing.  not all chips use this
    # the pico2 rp2350 does not 
    SIGN_METADATA: 'NOT SET'


    # TODO: Copy the input artifacts to a location 
    # where out docker container can access them.

    # TODO: Invoke out docker container 

    # TODO: Parse the results from the docker container
    # and ensue the expected build artifacts are present.

    # TODO: Copy the sig  
        ifned output from our location where
    # the docker container has to access to a location where
    # users expect them and add a timestamp so we can accumulate
    # multiple timestamp output.  And commit and push those 
    # files back to the signed directory here.  

jobs:
  sign-firmware:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout Repository
        uses: actions/checkout@v4

      - name: Run Signing Action
        uses: your-org/signing-action@v1
        with:
          BUILD_ACTION: sign
          OTP_FILE: otp.json
          FIRMWARE: firmware.bin
          PRIVATE_KEY: ${{ secrets.PRIVATE_KEY }}
          BOARD_NAME: custom-board

      - name: Rename and Timestamp Signed Artifact
        run: |
          TIMESTAMP=$(date +"%Y%m%d-%H%M%S")
          mkdir -p signed_artifacts
          mv docker_workspace/firmware.signed signed_artifacts/${TIMESTAMP}_firmware.signed

      - name: Commit and Push Signed Firmware
        run: |
          git config --global user.name "github-actions"
          git config --global user.email "github-actions@github.com"
          git add signed_artifacts/
          git commit -m "Add signed firmware $TIMESTAMP"
          git push origin main


